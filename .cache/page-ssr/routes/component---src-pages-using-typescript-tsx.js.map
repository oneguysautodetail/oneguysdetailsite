{"version":3,"file":"component---src-pages-using-typescript-tsx.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/layout/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/using-typescript.tsx"],"sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport \"./layout.scss\"\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <div\n        style={{\n          margin: `0 auto`,\n        }}\n      >\n        <div className=\"site-bg\"></div>\n          <main>{children}</main>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout/layout.js\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({ data, path }) => (\n  <Layout>\n    <Seo title=\"Using TypeScript\" />\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\n      (like gatsby-node.js) currently don't support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n"],"names":["React","PropTypes","Layout","children","margin","propTypes","node","isRequired","Helmet","SEO","description","lang","meta","title","site","metaDescription","siteMetadata","name","content","property","author","concat","defaultProps","string","arrayOf","object","Link","Seo","UsingTypescript","data","path","buildTime","query"],"sourceRoot":""}